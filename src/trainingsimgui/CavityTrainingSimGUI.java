/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package trainingsimgui;

import Controller.CavityController;
import cavity2.CStateTableModel;
import cavity2.Cavity;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.util.ArrayList;

/**
 *
 * @author Candyscream
 */

public class CavityTrainingSimGUI extends javax.swing.JFrame {
    private CavityController controller;
    private ArrayList<trainingsimgui.CapacityRowPanel> capacityRowPanels;
    /**
     * Creates new form CavityTrainingSimGUI
     */
    public CavityTrainingSimGUI(CavityController ctr) {
        setController(ctr);
        initComponents();
        initCapPanel();
        updateStatsPanel();
    }
    public void initCapPanel() {
        capacityRowPanels=new ArrayList<>();
        capacityRowPanels.add(capacityRowPanel1);
        capacityRowPanels.add(capacityRowPanel2);
        capacityRowPanels.add(capacityRowPanel3);
        capacityRowPanels.add(capacityRowPanel4);
        capacityRowPanels.add(capacityRowPanel5);
        for (int i=0; i<capacityRowPanels.size();i++){
            capacityRowPanels.get(i).init(i,controller);
        }
        redrawCapPanel();
    }
    private void redrawCapPanel(){
        int o=capacitysScrollBar.getValue();
        for (int i=0; i<capacityRowPanels.size();i++){
            capacityRowPanels.get(i).setOffset(o);
        }
    
    }
	/**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        historyTab = new javax.swing.JTabbedPane();
        statsPane = new javax.swing.JPanel();
        values = new javax.swing.JPanel();
        dateLabel = new javax.swing.JLabel();
        dateField = new javax.swing.JLabel();
        painLabel = new javax.swing.JLabel();
        painField = new javax.swing.JLabel();
        sorenessLabel = new javax.swing.JLabel();
        sorenessField = new javax.swing.JLabel();
        desenseLabel = new javax.swing.JLabel();
        desenseField = new javax.swing.JLabel();
        damageField = new javax.swing.JLabel();
        damageLabel = new javax.swing.JLabel();
        xnessPanel = new javax.swing.JPanel();
        lossenessLabel = new javax.swing.JLabel();
        loosenessValue = new javax.swing.JProgressBar();
        sorenesLabel = new javax.swing.JLabel();
        sorenessValue = new javax.swing.JProgressBar();
        stretchynessLabel = new javax.swing.JLabel();
        stretchynessValue = new javax.swing.JProgressBar();
        abusednessLabel = new javax.swing.JLabel();
        abusednessValue = new javax.swing.JProgressBar();
        gapingnessLabel = new javax.swing.JLabel();
        gapingnessValue = new javax.swing.JProgressBar();
        damagednessLabel = new javax.swing.JLabel();
        damagednessValue = new javax.swing.JProgressBar();
        prolapsednessLabel = new javax.swing.JLabel();
        prolapsednessValue = new javax.swing.JProgressBar();
        capacityPanel = new javax.swing.JPanel();
        capPanelHeader = new javax.swing.JLabel();
        rowPanelContainer = new javax.swing.JPanel();
        capacityRowPanel3 = new trainingsimgui.CapacityRowPanel();
        capacityRowPanel4 = new trainingsimgui.CapacityRowPanel();
        capacityRowPanel5 = new trainingsimgui.CapacityRowPanel();
        capacityRowPanel2 = new trainingsimgui.CapacityRowPanel();
        capacityRowPanel1 = new trainingsimgui.CapacityRowPanel();
        capacitysScrollBar = new javax.swing.JScrollBar();
        settingsPanel = new javax.swing.JPanel();
        pronounsLabel = new javax.swing.JLabel();
        pronounsComboBox = new javax.swing.JComboBox();
        nameLabel = new javax.swing.JLabel();
        nameTextField = new javax.swing.JTextField();
        cavityChoiceLabel = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        cavityBox = new javax.swing.JComboBox();
        historyPanel = new javax.swing.JPanel();
        historyTableScrollBar = new javax.swing.JScrollPane();
        historyTable = new javax.swing.JTable();
        actionsPanel = new javax.swing.JPanel();
        useToyLabel = new javax.swing.JLabel();
        toyLengthLabel = new javax.swing.JLabel();
        useToyLengthSpinner = new javax.swing.JSpinner();
        useToyLengthUnitLabel = new javax.swing.JLabel();
        toyWidthLabel = new javax.swing.JLabel();
        useToyWidthSpinner = new javax.swing.JSpinner();
        useToyWidthUnitLabel = new javax.swing.JLabel();
        useToyNowButton = new javax.swing.JButton();
        useToyForLabel = new javax.swing.JLabel();
        useToyForTimeBox = new javax.swing.JComboBox();
        useToyForUnitLabel = new javax.swing.JLabel();
        restLabel = new javax.swing.JLabel();
        restForTimeBox = new javax.swing.JComboBox();
        restForLabel = new javax.swing.JLabel();
        restForrUnitLabel = new javax.swing.JLabel();
        restNowButton = new javax.swing.JButton();
        logScrollPanel = new javax.swing.JScrollPane();
        logArea = new javax.swing.JTextArea();
        useToyStopAtLabel = new javax.swing.JLabel();
        useToyPainStopSlider = new javax.swing.JSlider();
        useToyPainGt0Label = new javax.swing.JLabel();
        useToyMaxPainLabel = new javax.swing.JLabel();
        useToyPainPercentLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(800, 700));
        setResizable(false);

        dateLabel.setText("Date:");

        dateField.setText("Date");

        painLabel.setText("Painvalue:");

        painField.setText("Pain");

        sorenessLabel.setText("Sorenessvalue:");

        sorenessField.setText("Sore");

        desenseLabel.setText("Desenseval:");

        desenseField.setText("Desense");

        damageField.setText("Damage");

        damageLabel.setText("Damage:");

        javax.swing.GroupLayout valuesLayout = new javax.swing.GroupLayout(values);
        values.setLayout(valuesLayout);
        valuesLayout.setHorizontalGroup(
            valuesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(valuesLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(valuesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dateLabel)
                    .addComponent(painLabel)
                    .addComponent(sorenessLabel)
                    .addComponent(desenseLabel)
                    .addComponent(damageLabel))
                .addGap(33, 33, 33)
                .addGroup(valuesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(desenseField)
                    .addComponent(dateField)
                    .addComponent(painField)
                    .addComponent(sorenessField)
                    .addComponent(damageField))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        valuesLayout.setVerticalGroup(
            valuesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(valuesLayout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addGroup(valuesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dateLabel)
                    .addComponent(dateField))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(valuesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(painLabel)
                    .addComponent(painField))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(valuesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sorenessLabel)
                    .addComponent(sorenessField))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(valuesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(desenseLabel)
                    .addComponent(desenseField))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(valuesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(damageLabel)
                    .addComponent(damageField))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lossenessLabel.setText("Looseness:");

        loosenessValue.setToolTipText("");

        sorenesLabel.setText("Soreness:");

        stretchynessLabel.setText("Stretchyness:");

        abusednessLabel.setText("Abusedness:");

        gapingnessLabel.setText("Gapingness:");

        damagednessLabel.setText("Damagedness:");

        prolapsednessLabel.setText("Prolapsedness:");

        javax.swing.GroupLayout xnessPanelLayout = new javax.swing.GroupLayout(xnessPanel);
        xnessPanel.setLayout(xnessPanelLayout);
        xnessPanelLayout.setHorizontalGroup(
            xnessPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(xnessPanelLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(xnessPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lossenessLabel)
                    .addComponent(sorenesLabel)
                    .addComponent(stretchynessLabel)
                    .addComponent(abusednessLabel)
                    .addComponent(gapingnessLabel)
                    .addComponent(damagednessLabel)
                    .addComponent(prolapsednessLabel))
                .addGap(27, 27, 27)
                .addGroup(xnessPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(prolapsednessValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(damagednessValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(gapingnessValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(abusednessValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(stretchynessValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sorenessValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(loosenessValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        xnessPanelLayout.setVerticalGroup(
            xnessPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(xnessPanelLayout.createSequentialGroup()
                .addGroup(xnessPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lossenessLabel)
                    .addComponent(loosenessValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(xnessPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sorenesLabel)
                    .addComponent(sorenessValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(xnessPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(stretchynessLabel)
                    .addComponent(stretchynessValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(xnessPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(abusednessLabel)
                    .addComponent(abusednessValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(xnessPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(gapingnessLabel)
                    .addComponent(gapingnessValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(xnessPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(damagednessLabel)
                    .addComponent(damagednessValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(xnessPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(prolapsednessLabel)
                    .addComponent(prolapsednessValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        capPanelHeader.setText("Capacities");

        javax.swing.GroupLayout rowPanelContainerLayout = new javax.swing.GroupLayout(rowPanelContainer);
        rowPanelContainer.setLayout(rowPanelContainerLayout);
        rowPanelContainerLayout.setHorizontalGroup(
            rowPanelContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(capacityRowPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(capacityRowPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(capacityRowPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(capacityRowPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(capacityRowPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        rowPanelContainerLayout.setVerticalGroup(
            rowPanelContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rowPanelContainerLayout.createSequentialGroup()
                .addComponent(capacityRowPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(capacityRowPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(capacityRowPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(capacityRowPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(capacityRowPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        capacitysScrollBar.setMaximum(Math.max(0,controller.getCurCav().getDepth()-4));
        capacitysScrollBar.addAdjustmentListener(new java.awt.event.AdjustmentListener() {
            public void adjustmentValueChanged(java.awt.event.AdjustmentEvent evt) {
                capScrolled(evt);
            }
        });

        javax.swing.GroupLayout capacityPanelLayout = new javax.swing.GroupLayout(capacityPanel);
        capacityPanel.setLayout(capacityPanelLayout);
        capacityPanelLayout.setHorizontalGroup(
            capacityPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(capacityPanelLayout.createSequentialGroup()
                .addComponent(capPanelHeader)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, capacityPanelLayout.createSequentialGroup()
                .addGap(0, 279, Short.MAX_VALUE)
                .addComponent(capacitysScrollBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60))
            .addGroup(capacityPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(capacityPanelLayout.createSequentialGroup()
                    .addComponent(rowPanelContainer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 80, Short.MAX_VALUE)))
        );
        capacityPanelLayout.setVerticalGroup(
            capacityPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(capacityPanelLayout.createSequentialGroup()
                .addComponent(capPanelHeader)
                .addGap(17, 17, 17)
                .addComponent(capacitysScrollBar, javax.swing.GroupLayout.DEFAULT_SIZE, 205, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(capacityPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, capacityPanelLayout.createSequentialGroup()
                    .addContainerGap(31, Short.MAX_VALUE)
                    .addComponent(rowPanelContainer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
        );

        javax.swing.GroupLayout statsPaneLayout = new javax.swing.GroupLayout(statsPane);
        statsPane.setLayout(statsPaneLayout);
        statsPaneLayout.setHorizontalGroup(
            statsPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(statsPaneLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(statsPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(xnessPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(values, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(capacityPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        statsPaneLayout.setVerticalGroup(
            statsPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(statsPaneLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(statsPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(statsPaneLayout.createSequentialGroup()
                        .addComponent(values, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(xnessPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(capacityPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        historyTab.addTab("Stats", statsPane);

        pronounsLabel.setText("Character pronouns");

        pronounsComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "he/his/his/himself", "she/her/hers/herself", "they/their/theirs/themself" }));
        pronounsComboBox.setToolTipText("Change the pronouns used for your character.");
        pronounsComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pronounsComboBoxActionPerformed(evt);
            }
        });

        nameLabel.setText("Character name");

        nameTextField.setText("Sasha");
        nameTextField.setToolTipText("change your characters name");
        nameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameTextFieldActionPerformed(evt);
            }
        });

        cavityChoiceLabel.setText("Cavity to train");

        jButton1.setText("Reset Game");

        cavityBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "anus", "vagina", "urethra", "cloaca" }));

        javax.swing.GroupLayout settingsPanelLayout = new javax.swing.GroupLayout(settingsPanel);
        settingsPanel.setLayout(settingsPanelLayout);
        settingsPanelLayout.setHorizontalGroup(
            settingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(settingsPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(settingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(settingsPanelLayout.createSequentialGroup()
                        .addGroup(settingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(pronounsLabel)
                            .addComponent(pronounsComboBox, 0, 220, Short.MAX_VALUE)
                            .addComponent(nameLabel)
                            .addComponent(nameTextField))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 707, Short.MAX_VALUE)
                        .addComponent(jButton1))
                    .addGroup(settingsPanelLayout.createSequentialGroup()
                        .addGroup(settingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cavityChoiceLabel)
                            .addComponent(cavityBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        settingsPanelLayout.setVerticalGroup(
            settingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(settingsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pronounsLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(settingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pronounsComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(nameLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cavityChoiceLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cavityBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(149, Short.MAX_VALUE))
        );

        historyTab.addTab("Settings", settingsPanel);

        historyTableScrollBar.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        historyTableScrollBar.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        historyTable.setModel(new cavity2.CStateTableModel(controller.getState()));
        historyTableScrollBar.setViewportView(historyTable);

        javax.swing.GroupLayout historyPanelLayout = new javax.swing.GroupLayout(historyPanel);
        historyPanel.setLayout(historyPanelLayout);
        historyPanelLayout.setHorizontalGroup(
            historyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(historyPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(historyTableScrollBar, javax.swing.GroupLayout.PREFERRED_SIZE, 763, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(275, Short.MAX_VALUE))
        );
        historyPanelLayout.setVerticalGroup(
            historyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(historyPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(historyTableScrollBar, javax.swing.GroupLayout.DEFAULT_SIZE, 283, Short.MAX_VALUE)
                .addContainerGap())
        );

        historyTab.addTab("History", historyPanel);

        useToyLabel.setText("Use toy");

        toyLengthLabel.setText("Lenght");

        useToyLengthSpinner.setModel(new javax.swing.SpinnerNumberModel(18, 4, 50, 1));
        useToyLengthSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                useToyLengthSpinnerStateChanged(evt);
            }
        });

        useToyLengthUnitLabel.setText("cm");

        toyWidthLabel.setText("width");

        useToyWidthSpinner.setModel(new javax.swing.SpinnerNumberModel(Float.valueOf(1.8f), Float.valueOf(0.2f), Float.valueOf(15.0f), Float.valueOf(0.2f)));
        useToyWidthSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                useToyWidthSpinnerStateChanged(evt);
            }
        });

        useToyWidthUnitLabel.setText("cm");

        useToyNowButton.setText("use now");
        useToyNowButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                useToyNowButtonActionPerformed(evt);
            }
        });

        useToyForLabel.setText("use for");

        useToyForTimeBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "5", "10", "15", "30", "40", "60", "90", "120", "180" }));
        useToyForTimeBox.setSelectedIndex(3);
        useToyForTimeBox.setToolTipText("");
        useToyForTimeBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                useToyForTimeBoxActionPerformed(evt);
            }
        });

        useToyForUnitLabel.setText("min");
        useToyForUnitLabel.setToolTipText("");

        restLabel.setText("Rest");

        restForTimeBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "5", "10", "15", "30", "45", "60", "90", "120", "180", "1440" }));
        restForTimeBox.setToolTipText("");
        restForTimeBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                restForTimeBoxActionPerformed(evt);
            }
        });

        restForLabel.setText("for");

        restForrUnitLabel.setText("min");

        restNowButton.setText("rest now");
        restNowButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                restNowButtonActionPerformed(evt);
            }
        });

        logArea.setColumns(20);
        logArea.setRows(5);
        logScrollPanel.setViewportView(logArea);

        useToyStopAtLabel.setText("stop at");

        useToyPainStopSlider.setMaximum(1000);
        useToyPainStopSlider.setSnapToTicks(true);
        useToyPainStopSlider.setToolTipText("");
        useToyPainStopSlider.setValue(200);
        useToyPainStopSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                useToyPainStopSliderStateChanged(evt);
            }
        });

        useToyPainGt0Label.setText("Pain>0");

        useToyMaxPainLabel.setText("MaxPain");

        useToyPainPercentLabel.setText(getPainPercent());

        javax.swing.GroupLayout actionsPanelLayout = new javax.swing.GroupLayout(actionsPanel);
        actionsPanel.setLayout(actionsPanelLayout);
        actionsPanelLayout.setHorizontalGroup(
            actionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, actionsPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(actionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(actionsPanelLayout.createSequentialGroup()
                        .addComponent(logScrollPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 772, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(256, 256, 256))
                    .addGroup(actionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(actionsPanelLayout.createSequentialGroup()
                            .addComponent(restLabel)
                            .addGap(0, 0, Short.MAX_VALUE))
                        .addGroup(actionsPanelLayout.createSequentialGroup()
                            .addGroup(actionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(actionsPanelLayout.createSequentialGroup()
                                    .addGroup(actionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(toyLengthLabel)
                                        .addComponent(restForLabel))
                                    .addGap(18, 18, 18)
                                    .addGroup(actionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(useToyLengthSpinner)
                                        .addComponent(restForTimeBox, 0, 53, Short.MAX_VALUE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(actionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(useToyLengthUnitLabel)
                                        .addComponent(restForrUnitLabel))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(actionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(actionsPanelLayout.createSequentialGroup()
                                            .addComponent(toyWidthLabel)
                                            .addGap(18, 18, 18)
                                            .addComponent(useToyWidthSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(useToyWidthUnitLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(useToyForLabel)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(useToyForTimeBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(useToyForUnitLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(useToyNowButton)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(useToyStopAtLabel))
                                        .addComponent(restNowButton))
                                    .addGroup(actionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(actionsPanelLayout.createSequentialGroup()
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(useToyPainGt0Label)
                                            .addGap(30, 30, 30)
                                            .addComponent(useToyMaxPainLabel))
                                        .addGroup(actionsPanelLayout.createSequentialGroup()
                                            .addGap(10, 10, 10)
                                            .addComponent(useToyPainStopSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(useToyPainPercentLabel))))
                                .addComponent(useToyLabel))
                            .addContainerGap(408, Short.MAX_VALUE)))))
        );
        actionsPanelLayout.setVerticalGroup(
            actionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(actionsPanelLayout.createSequentialGroup()
                .addComponent(useToyLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(actionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(actionsPanelLayout.createSequentialGroup()
                        .addGroup(actionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(toyLengthLabel)
                            .addComponent(useToyLengthSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(useToyLengthUnitLabel)
                            .addComponent(toyWidthLabel)
                            .addComponent(useToyWidthSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(useToyWidthUnitLabel)
                            .addComponent(useToyNowButton)
                            .addComponent(useToyForLabel)
                            .addComponent(useToyForTimeBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(useToyForUnitLabel)
                            .addComponent(useToyStopAtLabel)
                            .addComponent(useToyPainPercentLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(actionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(restLabel)
                            .addGroup(actionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(useToyPainGt0Label)
                                .addComponent(useToyMaxPainLabel)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(actionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(restForTimeBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(restForLabel)
                            .addComponent(restForrUnitLabel)
                            .addComponent(restNowButton))
                        .addGap(21, 21, 21)
                        .addComponent(logScrollPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(useToyPainStopSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(historyTab, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(actionsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 855, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(historyTab)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(actionsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(395, 395, 395))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 689, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void restNowButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_restNowButtonActionPerformed
        int minutes[]={5,10,15,30,45,60,90,120,180,1440};
        int ind = restForTimeBox.getSelectedIndex();
        controller.restAction(minutes[ind]);
        setLogAreaText(getLogAreaText()+"\n"+String.format("Rested for %d minutes.\n",minutes[ind]));
        updateTableModel();
        updateStatsPanel();
        redrawCapPanel();
    }//GEN-LAST:event_restNowButtonActionPerformed

    private void restForTimeBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_restForTimeBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_restForTimeBoxActionPerformed

    private void useToyForTimeBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_useToyForTimeBoxActionPerformed
       
    }//GEN-LAST:event_useToyForTimeBoxActionPerformed

    private void useToyNowButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_useToyNowButtonActionPerformed
        int minutes[]={5,10,15,30,45,60,90,120,180};
        int ind = useToyForTimeBox.getSelectedIndex();
        controller.simpleInsertAction(minutes[ind],(int)useToyLengthSpinner.getValue(),(float)useToyWidthSpinner.getValue(),useToyPainStopSlider.getValue()/1000f);
        updateTableModel();
        updateStatsPanel();
        redrawCapPanel();
    }//GEN-LAST:event_useToyNowButtonActionPerformed

    private void nameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameTextFieldActionPerformed
        //TODO: Namen übernehmen
        //controller.character.setName(nameTextField.getText(0,30));
       
    }//GEN-LAST:event_nameTextFieldActionPerformed

    private void pronounsComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pronounsComboBoxActionPerformed
        // TODO add your handling code here:
        // controller.character.setPronouns();
    }//GEN-LAST:event_pronounsComboBoxActionPerformed

    private void useToyPainStopSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_useToyPainStopSliderStateChanged
        // TODO add your handling code here:
        useToyPainPercentLabel.setText(getPainPercent());
    }//GEN-LAST:event_useToyPainStopSliderStateChanged

    private void useToyLengthSpinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_useToyLengthSpinnerStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_useToyLengthSpinnerStateChanged

    private void useToyWidthSpinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_useToyWidthSpinnerStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_useToyWidthSpinnerStateChanged

    private void capScrolled(java.awt.event.AdjustmentEvent evt) {//GEN-FIRST:event_capScrolled
        // TODO add your handling code here:
        redrawCapPanel();
    }//GEN-LAST:event_capScrolled

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CavityTrainingSimGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CavityTrainingSimGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CavityTrainingSimGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CavityTrainingSimGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
 /*       java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CavityTrainingSimGUI().setVisible(true);
            }
        });*/
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel abusednessLabel;
    private javax.swing.JProgressBar abusednessValue;
    private javax.swing.JPanel actionsPanel;
    private javax.swing.JLabel capPanelHeader;
    private javax.swing.JPanel capacityPanel;
    private trainingsimgui.CapacityRowPanel capacityRowPanel1;
    private trainingsimgui.CapacityRowPanel capacityRowPanel2;
    private trainingsimgui.CapacityRowPanel capacityRowPanel3;
    private trainingsimgui.CapacityRowPanel capacityRowPanel4;
    private trainingsimgui.CapacityRowPanel capacityRowPanel5;
    private javax.swing.JScrollBar capacitysScrollBar;
    private javax.swing.JComboBox cavityBox;
    private javax.swing.JLabel cavityChoiceLabel;
    private javax.swing.JLabel damageField;
    private javax.swing.JLabel damageLabel;
    private javax.swing.JLabel damagednessLabel;
    private javax.swing.JProgressBar damagednessValue;
    private javax.swing.JLabel dateField;
    private javax.swing.JLabel dateLabel;
    private javax.swing.JLabel desenseField;
    private javax.swing.JLabel desenseLabel;
    private javax.swing.JLabel gapingnessLabel;
    private javax.swing.JProgressBar gapingnessValue;
    private javax.swing.JPanel historyPanel;
    private javax.swing.JTabbedPane historyTab;
    private javax.swing.JTable historyTable;
    private javax.swing.JScrollPane historyTableScrollBar;
    private javax.swing.JButton jButton1;
    private javax.swing.JTextArea logArea;
    private javax.swing.JScrollPane logScrollPanel;
    private javax.swing.JProgressBar loosenessValue;
    private javax.swing.JLabel lossenessLabel;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JTextField nameTextField;
    private javax.swing.JLabel painField;
    private javax.swing.JLabel painLabel;
    private javax.swing.JLabel prolapsednessLabel;
    private javax.swing.JProgressBar prolapsednessValue;
    private javax.swing.JComboBox pronounsComboBox;
    private javax.swing.JLabel pronounsLabel;
    private javax.swing.JLabel restForLabel;
    private javax.swing.JComboBox restForTimeBox;
    private javax.swing.JLabel restForrUnitLabel;
    private javax.swing.JLabel restLabel;
    private javax.swing.JButton restNowButton;
    private javax.swing.JPanel rowPanelContainer;
    private javax.swing.JPanel settingsPanel;
    private javax.swing.JLabel sorenesLabel;
    private javax.swing.JLabel sorenessField;
    private javax.swing.JLabel sorenessLabel;
    private javax.swing.JProgressBar sorenessValue;
    private javax.swing.JPanel statsPane;
    private javax.swing.JLabel stretchynessLabel;
    private javax.swing.JProgressBar stretchynessValue;
    private javax.swing.JLabel toyLengthLabel;
    private javax.swing.JLabel toyWidthLabel;
    private javax.swing.JLabel useToyForLabel;
    private javax.swing.JComboBox useToyForTimeBox;
    private javax.swing.JLabel useToyForUnitLabel;
    private javax.swing.JLabel useToyLabel;
    private javax.swing.JSpinner useToyLengthSpinner;
    private javax.swing.JLabel useToyLengthUnitLabel;
    private javax.swing.JLabel useToyMaxPainLabel;
    private javax.swing.JButton useToyNowButton;
    private javax.swing.JLabel useToyPainGt0Label;
    private javax.swing.JLabel useToyPainPercentLabel;
    private javax.swing.JSlider useToyPainStopSlider;
    private javax.swing.JLabel useToyStopAtLabel;
    private javax.swing.JSpinner useToyWidthSpinner;
    private javax.swing.JLabel useToyWidthUnitLabel;
    private javax.swing.JPanel values;
    private javax.swing.JPanel xnessPanel;
    // End of variables declaration//GEN-END:variables

    private String getPainPercent() {
       String out=String.format("%3.1f%n",(0.0+useToyPainStopSlider.getValue()/10))+'%';
       return out;
    }

    public void setController(CavityController ctr) {
        this.controller=ctr;
    }

    public void setLogAreaText(String txt){
        logArea.setText(txt);
    }

    public String getLogAreaText() {
        return logArea.getText();
    }
    public void updateTableModel() {
    CStateTableModel tableModel=(CStateTableModel)historyTable.getModel();
	tableModel.setStates(controller.getState());
	tableModel.recalculateColumns();
	tableModel.initColumnSizes(historyTable);
	tableModel.fireTableStructureChanged();	
    }
    public void updateStatsPanel() {
        Cavity c = controller.getCurCav();
        dateField.setText(controller.getDate().printDate());
        painField.setText(String.format("%3.2f",c.getPain()));
        sorenessField.setText(String.format("%3.2f",c.getSore()));
        desenseField.setText(String.format("%3.2f",c.getDesense()));
        damageField.setText(String.format("%3.2f",c.getDamage()));
        
        loosenessValue.setValue((int)(c.getLooseness()*100));
        sorenessValue.setValue((int)(c.getSoreness()*100));
        stretchynessValue.setValue((int)(c.getStretchyness()*100));
        abusednessValue.setValue((int)(c.getAbusedness()*100));
        gapingnessValue.setValue((int)(c.getGapingness()*100));
        damagednessValue.setValue((int)(c.getDamagedness()*100));
        prolapsednessValue.setValue((int)(c.getProlapsedness()*100));
    }
    
}
